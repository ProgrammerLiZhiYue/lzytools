{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","originString","setOriginString","convertedString","setConvertedString","clipboard","Clipboard","on","Toast","success","fail","className","autoHeight","value","onChange","e","rows","type","onClick","id","parse","query","Header","title","Body","data-clipboard-action","data-clipboard-target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAiEeA,MA1Df,WAAgB,IAAD,EAC2BC,mBAAS,IADpC,mBACNC,EADM,KACQC,EADR,OAEiCF,mBAAS,IAF1C,mBAENG,EAFM,KAEWC,EAFX,KAITC,EAAY,IAAIC,IAAU,YAc9B,OAbAD,EAAUE,GAAG,WAAW,WACtBC,IAAMC,QAAQ,2BAAQ,QAExBJ,EAAUE,GAAG,SAAS,WACpBC,IAAME,KAAK,+DAAc,QAUzB,sBAAKC,UAAU,MAAf,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,YAAU,EACVC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAOb,EAAgBa,IACjCC,KAAM,MAGV,uBACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAQC,KAAK,UAAUC,QAlB7B,WACE,IAAMC,EAAKC,gBAAMnB,GAAc,GAAMoB,MAAMF,GAC3Cf,EAAmB,oDAAD,OACoCe,EADpC,QAgBd,4BAIF,uBACA,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAKG,OAAN,CAAaC,MAAM,6BACnB,cAAC,IAAKC,KAAN,UACE,8BACE,sBAAML,GAAG,aAAT,SAAuBhB,WAI7B,uBACA,cAAC,IAAD,CACEgB,GAAG,UACHF,KAAK,UACLQ,wBAAsB,OACtBC,wBAAsB,cAJxB,6CCxCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.4e2084bc.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport \"antd-mobile/dist/antd-mobile.css\";\r\nimport { WingBlank, TextareaItem, Button, Card, Toast } from \"antd-mobile\";\r\nimport { useState } from \"react\";\r\nimport { parse } from \"url\";\r\nimport Clipboard from \"clipboard\";\r\n\r\nfunction App() {\r\n  const [originString, setOriginString] = useState(\"\");\r\n  const [convertedString, setConvertedString] = useState(\"\");\r\n\r\n  let clipboard = new Clipboard(\"#btnCopy\");\r\n  clipboard.on(\"success\", () => {\r\n    Toast.success(\"复制成功\", 1.5);\r\n  });\r\n  clipboard.on(\"error\", () => {\r\n    Toast.fail(\"复制失败，请手动复制\", 1.5);\r\n  });\r\n\r\n  function convert() {\r\n    const id = parse(originString, true).query.id;\r\n    setConvertedString(\r\n      `https://h5.m.taobao.com/cart/order.html?buyParam=${id}_1`\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <WingBlank>\r\n        <TextareaItem\r\n          autoHeight\r\n          value={originString}\r\n          onChange={(e) => setOriginString(e)}\r\n          rows={5}\r\n        ></TextareaItem>\r\n      </WingBlank>\r\n      <br />\r\n      <WingBlank>\r\n        <Button type=\"primary\" onClick={convert}>\r\n          转换\r\n        </Button>\r\n      </WingBlank>\r\n      <br />\r\n      <WingBlank>\r\n        <Card>\r\n          <Card.Header title=\"转换结果\"></Card.Header>\r\n          <Card.Body>\r\n            <div>\r\n              <span id=\"copiedSpan\">{convertedString}</span>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n        <br />\r\n        <Button\r\n          id=\"btnCopy\"\r\n          type=\"primary\"\r\n          data-clipboard-action=\"copy\"\r\n          data-clipboard-target=\"#copiedSpan\"\r\n        >\r\n          点我复制\r\n        </Button>\r\n      </WingBlank>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}